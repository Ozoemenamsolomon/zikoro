import { createRouteHandlerClient } from "@supabase/auth-helpers-nextjs";
import { cookies } from "next/headers";
import { revalidatePath } from "next/cache";

export async function addCertificate(formData: FormData) {
  const cookieStore = cookies();
  const supabase = createRouteHandlerClient({ cookies: () => cookieStore });
}

// CREATE TABLE IF NOT EXISTS public.certificate
// (
//     id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
//     created_at timestamp with time zone NOT NULL DEFAULT now(),
//     "eventId" text COLLATE pg_catalog."default",
//     "certificateName" text COLLATE pg_catalog."default",
//     "certificateHeading" text COLLATE pg_catalog."default",
//     "TrainingDuration" numeric,
//     "cpdRequired" boolean,
//     "logoPosition" text COLLATE pg_catalog."default",
//     "trainingScope" json,
//     "zikoroLogo" boolean,
//     "certficateTemplate" text COLLATE pg_catalog."default",
//     attendance json,
//     "attendanceRate" numeric,
//     criteria json,
//     "organisationLogo" text COLLATE pg_catalog."default",
//     CONSTRAINT certificate_pkey PRIMARY KEY (id)
// )

// TABLESPACE pg_default;

// ALTER TABLE public.certificate
//     OWNER to postgres;
